/*
 * –§—É–Ω–∫—Ü—ñ—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º —Å–≤–æ—î—ó —Ä–æ–±–æ—Ç–∏ –º–æ–∂–µ –ø–æ–≤–µ—Ä—Ç–∞—Ç–∏ —ñ–Ω—à—É —Ñ—É–Ω–∫—Ü—ñ—é.
 *
 * –§—É–Ω–∫—Ü—ñ—è, —â–æ –ø–æ–≤–µ—Ä—Ç–∞—î—Ç—å—Å—è –ø—ñ–¥ —á–∞—Å –≤–∏–∫–ª–∏–∫—É –±—É–¥–µ –º–∞—Ç–∏ –¥–æ—Å—Ç—É–ø
 * –¥–æ –≤—Å—ñ—Ö –ª–æ–∫–∞–ª—å–Ω–∏—Ö –∑–º—ñ–Ω–Ω–∏—Ö (–æ–±–ª–∞—Å—Ç—ñ –≤–∏–¥–∏–º–æ—Å—Ç—ñ)
 * –ë–∞—Ç—å–∫—ñ–≤—Å—å–∫–æ—ó —Ñ—É–Ω–∫—Ü—ñ—ó (—Ç–æ–π –∑ —è–∫–æ—ó —ó—ó –ø–æ–≤–µ—Ä–Ω—É–ª–∏),
 * —Ü–µ –Ω–∞–∑–∏–≤–∞—î—Ç—å—Å—è ¬´–∑–∞–º–∏–∫–∞–Ω–Ω—è¬ª.
 */

const fnA = function (parameter) {
  const innerVariable = '–∑–Ω–∞—á–µ–Ω–Ω—è –≤–Ω—É—Ç—Ä—ñ—à–Ω—å–æ—ó –∑–º—ñ–Ω–Ω–æ—ó —Ñ—É–Ω–∫—Ü—ñ—ó fnA';

  const innerFunction = function () {
    console.log(parameter);
    console.log(innerVariable);
    console.log('—Ü–µ –≤–∏–∫–ª–∏–∫ innerFunction');
  };

  return innerFunction;
};

// const fnB = fnA(555);

// fnB();

// console.log(fnB);

/*
 * –ö—É—Ö–∞—Ä—å
 */

// const makeDish = function (sheffName, dish) {
//   console.log(`${sheffName} –≥–æ—Ç—É—î ${dish}`);
// };

// makeDish('Mango', '–ø–∏—Ä—ñ–∂–æ–∫');
// makeDish('Mango', '–æ–º–ª–µ—Ç');
// makeDish('Mango', '—á–∞–π');

// makeDish('Poly', '–∫–æ—Ç–ª–µ—Ç–∏');
// makeDish('Poly', '—Å—É–ø');
// makeDish('Poly', '–∫–∞–≤–∞');

const makeSheff = function (name) {
  const innerVar = 555;
  const message = 'hello';

  const makeDish = function (dish) {
    console.log(innerVar);
    console.log(message);
    console.log(`${name} –≥–æ—Ç—É—î ${dish}`);
  };

  return makeDish;
};

// const mango = makeSheff('Mango');

// console.dir(mango);

// mango('–∫–æ—Ç–ª–µ—Ç–∏');
// mango('–ø–∏—Ä—ñ–∂–æ–∫');

// const poly = makeSheff('Poly');

// console.dir(poly);

// poly('—á–∞–π');
// poly('–æ–º–ª–µ—Ç');

/*
 * –û–∫—Ä—É–≥–ª—é–≤–∞—á ü§∑‚Äç‚ôÇÔ∏è
 */

// const floatingPoint = 3.456789;
// const someInt = Math.round(floatingPoint); // 3
// const withDecimals = Number(floatingPoint.toFixed(2)); // 3.46

// const rounder = function (number, places) {
//   return Number(number.toFixed(places));
// };

// console.log(rounder(3.4567, 2));
// console.log(rounder(3.4567, 3));
// console.log(rounder(5.1234, 2));
// console.log(rounder(3.4567, 3));

const rounder = function (places) {
  return function (number) {
    return Number(number.toFixed(places));
  };
};

// const rounder2 = rounder(2);
// const rounder3 = rounder(3);

// console.dir(rounder2);
// console.dir(rounder3);

// console.log(rounder2(3.4567));
// console.log(rounder2(5.4512312312367));
// console.log(rounder3(3.4567));
// console.log(rounder2(5.1234));
// console.log(rounder3(3.4567));
// console.log(rounder3(10.67667));

/*
 * –ü—Ä–∏–≤–∞—Ç–Ω—ñ –¥–∞–Ω—ñ —Ç–∞ —Ñ—É–Ω–∫—Ü—ñ—ó - –ø—Ä–∏—Ö–æ–≤—É–≤–∞–Ω–Ω—è —Ä–µ–∞–ª—ñ–∑–∞—Ü—ñ—ó, —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å
 */

const salaryManagerFactory = function (employeeName, baseSalary = 0) {
  let salary = baseSalary;

  return {
    raise(amount) {
      if (amount > 1000) {
        return '–©–æ —Ü–µ –∑–∞ —Ñ—ñ–≥–Ω—è?';
      }
      salary += amount;
    },
    lower(amount) {
      salary -= amount;
    },
    current() {
      return `–ü–æ—Ç–æ—á–Ω–∞ –∑–∞—Ä–ø–ª–∞—Ç–∞ ${employeeName} - ${salary}`;
    },
  };
};

const salaryManager = salaryManagerFactory('Mango', 5000);

console.log(salaryManager.current());

console.log(salaryManager.raise(100000));

console.log(salaryManager.current());

// const myLibFactory = function () {
//   let value = 0;

//   const add = function (num) {
//     value += num;
//   };

//   return {
//     add: add,
//     getValue() {
//       return value;
//     },
//   };
// };

// const myLib = myLibFactory();

// console.log(myLib);
// console.log(myLib.getValue());

// myLib.add(10);
// console.log(myLib.getValue());
